// Generated by Dagger (https://dagger.dev).
package com.business.expenseTracker.domain.usecase;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class GetCurrencyUseCase_Factory implements Factory<GetCurrencyUseCase> {
  @Override
  public GetCurrencyUseCase get() {
    return newInstance();
  }

  public static GetCurrencyUseCase_Factory create() {
    return InstanceHolder.INSTANCE;
  }

  public static GetCurrencyUseCase newInstance() {
    return new GetCurrencyUseCase();
  }

  private static final class InstanceHolder {
    private static final GetCurrencyUseCase_Factory INSTANCE = new GetCurrencyUseCase_Factory();
  }
}
