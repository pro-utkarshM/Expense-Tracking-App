// Generated by Dagger (https://dagger.dev).
package com.business.expenseTracker.domain.usecase.prefs;

import com.business.expenseTracker.domain.repository.PrefsRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class GetPreferenceUseCase_Factory implements Factory<GetPreferenceUseCase> {
  private final Provider<PrefsRepository> prefsRepositoryProvider;

  public GetPreferenceUseCase_Factory(Provider<PrefsRepository> prefsRepositoryProvider) {
    this.prefsRepositoryProvider = prefsRepositoryProvider;
  }

  @Override
  public GetPreferenceUseCase get() {
    return newInstance(prefsRepositoryProvider.get());
  }

  public static GetPreferenceUseCase_Factory create(
      Provider<PrefsRepository> prefsRepositoryProvider) {
    return new GetPreferenceUseCase_Factory(prefsRepositoryProvider);
  }

  public static GetPreferenceUseCase newInstance(PrefsRepository prefsRepository) {
    return new GetPreferenceUseCase(prefsRepository);
  }
}
