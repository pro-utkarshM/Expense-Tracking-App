// Generated by Dagger (https://dagger.dev).
package com.business.expenseTracker.presentation.setting_screen.service;

import com.business.expenseTracker.domain.usecase.write_datastore.EditExpenseLimitUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class ResetWorkerFactory_Factory implements Factory<ResetWorkerFactory> {
  private final Provider<EditExpenseLimitUseCase> editExpenseLimitUseCaseProvider;

  public ResetWorkerFactory_Factory(
      Provider<EditExpenseLimitUseCase> editExpenseLimitUseCaseProvider) {
    this.editExpenseLimitUseCaseProvider = editExpenseLimitUseCaseProvider;
  }

  @Override
  public ResetWorkerFactory get() {
    return newInstance(editExpenseLimitUseCaseProvider.get());
  }

  public static ResetWorkerFactory_Factory create(
      Provider<EditExpenseLimitUseCase> editExpenseLimitUseCaseProvider) {
    return new ResetWorkerFactory_Factory(editExpenseLimitUseCaseProvider);
  }

  public static ResetWorkerFactory newInstance(EditExpenseLimitUseCase editExpenseLimitUseCase) {
    return new ResetWorkerFactory(editExpenseLimitUseCase);
  }
}
