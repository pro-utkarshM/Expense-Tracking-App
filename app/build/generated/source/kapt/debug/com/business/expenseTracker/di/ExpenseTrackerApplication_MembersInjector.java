// Generated by Dagger (https://dagger.dev).
package com.business.expenseTracker.di;

import com.business.expenseTracker.presentation.setting_screen.service.ResetWorkerFactory;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class ExpenseTrackerApplication_MembersInjector implements MembersInjector<ExpenseTrackerApplication> {
  private final Provider<ResetWorkerFactory> factoryProvider;

  public ExpenseTrackerApplication_MembersInjector(Provider<ResetWorkerFactory> factoryProvider) {
    this.factoryProvider = factoryProvider;
  }

  public static MembersInjector<ExpenseTrackerApplication> create(
      Provider<ResetWorkerFactory> factoryProvider) {
    return new ExpenseTrackerApplication_MembersInjector(factoryProvider);
  }

  @Override
  public void injectMembers(ExpenseTrackerApplication instance) {
    injectFactory(instance, factoryProvider.get());
  }

  @InjectedFieldSignature("com.business.expenseTracker.di.ExpenseTrackerApplication.factory")
  public static void injectFactory(ExpenseTrackerApplication instance, ResetWorkerFactory factory) {
    instance.factory = factory;
  }
}
