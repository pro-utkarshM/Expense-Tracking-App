// Generated by Dagger (https://dagger.dev).
package com.business.expenseTracker.di;

import android.content.SharedPreferences;
import com.business.expenseTracker.domain.repository.PrefsRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class ExpenseTrackerModule_ProvidePrefsRepositoryFactory implements Factory<PrefsRepository> {
  private final Provider<SharedPreferences> sharedPreferencesProvider;

  public ExpenseTrackerModule_ProvidePrefsRepositoryFactory(
      Provider<SharedPreferences> sharedPreferencesProvider) {
    this.sharedPreferencesProvider = sharedPreferencesProvider;
  }

  @Override
  public PrefsRepository get() {
    return providePrefsRepository(sharedPreferencesProvider.get());
  }

  public static ExpenseTrackerModule_ProvidePrefsRepositoryFactory create(
      Provider<SharedPreferences> sharedPreferencesProvider) {
    return new ExpenseTrackerModule_ProvidePrefsRepositoryFactory(sharedPreferencesProvider);
  }

  public static PrefsRepository providePrefsRepository(SharedPreferences sharedPreferences) {
    return Preconditions.checkNotNullFromProvides(ExpenseTrackerModule.INSTANCE.providePrefsRepository(sharedPreferences));
  }
}
