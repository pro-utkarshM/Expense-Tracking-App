// Generated by Dagger (https://dagger.dev).
package com.business.expenseTracker.domain.usecase.prefs;

import com.business.expenseTracker.domain.repository.PrefsRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class SetPreferenceUseCase_Factory implements Factory<SetPreferenceUseCase> {
  private final Provider<PrefsRepository> prefsRepositoryProvider;

  public SetPreferenceUseCase_Factory(Provider<PrefsRepository> prefsRepositoryProvider) {
    this.prefsRepositoryProvider = prefsRepositoryProvider;
  }

  @Override
  public SetPreferenceUseCase get() {
    return newInstance(prefsRepositoryProvider.get());
  }

  public static SetPreferenceUseCase_Factory create(
      Provider<PrefsRepository> prefsRepositoryProvider) {
    return new SetPreferenceUseCase_Factory(prefsRepositoryProvider);
  }

  public static SetPreferenceUseCase newInstance(PrefsRepository prefsRepository) {
    return new SetPreferenceUseCase(prefsRepository);
  }
}
