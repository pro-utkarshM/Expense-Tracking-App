// Generated by Dagger (https://dagger.dev).
package com.business.expenseTracker.presentation.main;

import com.business.expenseTracker.domain.usecase.prefs.GetPreferenceUseCase;
import com.business.expenseTracker.domain.usecase.prefs.SetPreferenceUseCase;
import com.business.expenseTracker.domain.usecase.read_datastore.GetOnBoardingKeyUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class MainViewModel_Factory implements Factory<MainViewModel> {
  private final Provider<GetOnBoardingKeyUseCase> getOnBoardingKeyUseCaseProvider;

  private final Provider<GetPreferenceUseCase> getPreferenceUseCaseProvider;

  private final Provider<SetPreferenceUseCase> setPreferenceUseCaseProvider;

  public MainViewModel_Factory(Provider<GetOnBoardingKeyUseCase> getOnBoardingKeyUseCaseProvider,
      Provider<GetPreferenceUseCase> getPreferenceUseCaseProvider,
      Provider<SetPreferenceUseCase> setPreferenceUseCaseProvider) {
    this.getOnBoardingKeyUseCaseProvider = getOnBoardingKeyUseCaseProvider;
    this.getPreferenceUseCaseProvider = getPreferenceUseCaseProvider;
    this.setPreferenceUseCaseProvider = setPreferenceUseCaseProvider;
  }

  @Override
  public MainViewModel get() {
    return newInstance(getOnBoardingKeyUseCaseProvider.get(), getPreferenceUseCaseProvider.get(), setPreferenceUseCaseProvider.get());
  }

  public static MainViewModel_Factory create(
      Provider<GetOnBoardingKeyUseCase> getOnBoardingKeyUseCaseProvider,
      Provider<GetPreferenceUseCase> getPreferenceUseCaseProvider,
      Provider<SetPreferenceUseCase> setPreferenceUseCaseProvider) {
    return new MainViewModel_Factory(getOnBoardingKeyUseCaseProvider, getPreferenceUseCaseProvider, setPreferenceUseCaseProvider);
  }

  public static MainViewModel newInstance(GetOnBoardingKeyUseCase getOnBoardingKeyUseCase,
      GetPreferenceUseCase getPreferenceUseCase, SetPreferenceUseCase setPreferenceUseCase) {
    return new MainViewModel(getOnBoardingKeyUseCase, getPreferenceUseCase, setPreferenceUseCase);
  }
}
