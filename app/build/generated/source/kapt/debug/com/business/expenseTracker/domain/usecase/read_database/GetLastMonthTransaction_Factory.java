// Generated by Dagger (https://dagger.dev).
package com.business.expenseTracker.domain.usecase.read_database;

import com.business.expenseTracker.domain.repository.TransactionRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class GetLastMonthTransaction_Factory implements Factory<GetLastMonthTransaction> {
  private final Provider<TransactionRepository> transactionRepositoryProvider;

  public GetLastMonthTransaction_Factory(
      Provider<TransactionRepository> transactionRepositoryProvider) {
    this.transactionRepositoryProvider = transactionRepositoryProvider;
  }

  @Override
  public GetLastMonthTransaction get() {
    return newInstance(transactionRepositoryProvider.get());
  }

  public static GetLastMonthTransaction_Factory create(
      Provider<TransactionRepository> transactionRepositoryProvider) {
    return new GetLastMonthTransaction_Factory(transactionRepositoryProvider);
  }

  public static GetLastMonthTransaction newInstance(TransactionRepository transactionRepository) {
    return new GetLastMonthTransaction(transactionRepository);
  }
}
